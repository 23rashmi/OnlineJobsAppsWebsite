@model JobsPortal.Models.UserLoginMV
@{
    ViewBag.Title = "Login";
}
@section Styles {
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        /* CSS for changing cursor on hover */
        .refresh-icon:hover {
            cursor: pointer;
        }

        /* Centering the form */
        .centered-form {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        /* Adjusting form width */
        .login-form {
            width: 400px;
        }

        /* Centering the login button */
        .login-button-container {
            text-align: center;
        }

        .login-button {
            display: inline-block;
        }

        /* Styling the footer */
        footer {
            display: flex;
            padding-top: 7%;
            text-align: center;
        }

        .forgot {
            padding-top: 3%;
        }
    </style>
}
<div class="centered-form">
    <div class="login-form section-top-border">
        <h3 class="mb-30">Login</h3>
        @using (Html.BeginForm("Login", "User", FormMethod.Post,
            new
            {
                @class = "form-contact",
                @novalidate = "novalidate",
                id = "login-form"
            }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="mt-4">
                @Html.LabelFor(model => model.UserName, new { @class = "form-label" })
                @Html.EditorFor(model => model.UserName, new
                {
                    htmlAttributes = new
                    {
                        @class = "form-control single-input",
                        @placeholder = "Enter User Name",
                        @onfocus = "this.placeholder = ''",
                        @onblur = "this.placeholder = 'User Name'",
                        @required = true
                    }
                })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>

            <div class="mt-4">
                @Html.LabelFor(model => model.Password, new { @class = "form-label" })
                <div class="input-group">
                    @Html.EditorFor(model => model.Password, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control single-input",
                            @type = "password",
                            @placeholder = "Enter Password",
                            @onfocus = "this.placeholder = ''",
                            @onblur = "this.placeholder = 'Password'",
                            @required = true
                        }
                    })
                    <div class="input-group-append">
                        <span class="input-group-text">
                            <i class="fa fa-eye-slash toggle-password" toggle="#Password"></i>
                        </span>
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>

            <hr />
            <div class="d-flex align-items-center">
                <h6>Refresh Captcha</h6>
                <div class="refresh-icon ml-2" onclick="cap()">
                    <i class="fas fa-sync-alt"></i>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-6">
                    <input type="text" class="form-control" readonly id="capt" style="font-size: 20px;">
                </div>
            </div>
            <label>Enter Captcha:</label>
            <div class="form-row">
                <div class="form-group col-md-6">
                    <input type="text" class="form-control" id="textinput" oninput="checkCaptcha()">
                </div>
            </div>
            <div class="form-group mt-4 login-button-container">
                <input style="display: inline-block; background-color: #00008B; color: #fff; border-radius:10%;" type="submit" value="Login" class="genric-btn success e-large circle login-button" id="login-button" disabled />

            </div>
            <div class="forgot">

                <a href="@Url.Content("~/User/Forgot")" class="btn-link">Forgot Password?</a>
            </div>
        }
    </div>
</div>

<footer>
    <!-- Footer content here -->
</footer>
@section Scripts {
    <script>
        // Moved out of the $(document).ready function for global access
        function generateRandomString(length) {
            const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
            let result = '';
            for (let i = 0; i < length; i++) {
                result += chars.charAt(Math.floor(Math.random() * chars.length));
            }
            return result;
        }

        // Moved out of the $(document).ready function for global access
        function cap() {
            const captcha = generateRandomString(6);
            document.getElementById("capt").value = captcha;
            //return captcha;
        }
        //function checkCaptcha() {
        //    var captchaInput = document.getElementById("textinput");
        //    var loginButton = document.getElementById("login-button");

        //    if (captchaInput.value.length> 0) {
        //        loginButton.removeAttribute("disabled");
        //    } else {
        //        loginButton.setAttribute("disabled", "disabled");
        //    }
        //}

        function checkCaptcha() {
            var captchaInput = document.getElementById("textinput");
            var loginButton = document.getElementById("login-button");

            var generatedCaptcha = document.getElementById("capt").value;

            if (captchaInput.value === generatedCaptcha && captchaInput.value.length === 6) {
                loginButton.removeAttribute("disabled");
            } else {
                loginButton.setAttribute("disabled", "disabled");
            }
        }

        $(document).ready(function () {
            $(".toggle-password").click(function () {
                $(this).toggleClass("fa-eye fa-eye-slash");
                var input = $($(this).attr("toggle"));
                if (input.attr("type") == "password") {
                    input.attr("type", "text");
                } else {
                    input.attr("type", "password");
                }
            });

            // Call cap function when the document is ready
            cap();
        });
    </script>
}